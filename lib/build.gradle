plugins {
    id 'kotlinx-serialization' version '1.3.41'
    id 'kotlin-multiplatform'
    id 'org.jetbrains.dokka' version '0.9.18'
}
repositories {
    mavenCentral()
    google()
    jcenter()
    maven { url "https://kotlin.bintray.com/kotlinx" }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'maven'

apply plugin: 'com.squareup.sqldelight'
sqldelight {
    MyDatabase {
        packageName = "pt.fyi.db"
        sourceFolders = ["sqldelight"]
    }
}

dokka {
    impliedPlatforms = ["common"] // This will force platform tags for all non-common sources e.g. "JVM"
    kotlinTasks {
        // dokka fails to retrieve sources from MPP-tasks so they must be set empty to avoid exception
        // use sourceRoot instead (see below)
        []
    }
    sourceRoot {
        // assuming there is only a single source dir...
        path = kotlin.sourceSets.commonMain.kotlin.srcDirs[0]
        platforms = ["common"]
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    
    packagingOptions {
        exclude 'META-INF/*.kotlin_module'
    }

    configurations {
        all {
            exclude group: 'org.json', module: 'json'
        }
    }

}

dependencies {
    
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serializer_runtime_version"
    implementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"

    implementation "com.squareup.sqldelight:android-driver:$sqldelight_version"

    //WEBSOCKET
    implementation 'com.github.nkzawa:socket.io-client:0.6.0'
}


kotlin {

    android("android")
    // This is for iPhone emulator
    // Switch here to iosArm64 (or iosArm32) to build library for iPhone device
    iosArm64("ios") {
        binaries {
            framework('InfinitumSDKMobile')
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "io.ktor:ktor-client-json:$ktor_version"
                implementation kotlin('stdlib-common')
                implementation "io.ktor:ktor-client-core:$ktor_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutine_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serializer_runtime_version"
                implementation "io.ktor:ktor-client-serialization:$ktor_version"
            }
        }
        commonTest {
            dependencies {
        		implementation kotlin('test-common')
        		implementation kotlin('test-annotations-common')
            }
        }
        androidMain {
            dependencies {
                implementation kotlin('stdlib')
            }
        }
        androidTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        iosMain.dependencies {
            implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:$serializer_runtime_version"
            implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$coroutine_version"

            implementation "io.ktor:ktor-client-ios:$ktor_version"
            implementation "io.ktor:ktor-client-core-native:$ktor_version"
            implementation "io.ktor:ktor-client-json-native:$ktor_version"
            implementation "io.ktor:ktor-client-serialization-native:$ktor_version"

            implementation "com.squareup.sqldelight:ios-driver:$sqldelight_version"
        }
        iosTest {
        }
    }
}


configurations {
    compileClasspath
}

install {
    repositories.mavenInstaller {
        pom.groupId = 'com.example'
        pom.version = 'x.y.z'
        pom.artifactId = project.name
    }
}